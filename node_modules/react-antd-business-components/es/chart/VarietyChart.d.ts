/// <reference types="react" />
import { Formatter } from './useFormat';
export declare const colors: string[];
export interface ChartData {
    /**
     * 图表展示配置的 `dataKeys` 列表，有多少项就渲染多少条图表
     * 成员属性除了自定义的 chartType，其他的和 rechart [Line](http://recharts.org/zh-CN/api/Line)、
     * [Area](http://recharts.org/zh-CN/api/Area)、[Bar](http://recharts.org/zh-CN/api/Bar) 的 props 保持一致
     */
    dataKeys?: {
        /**
         * rechart Line、Area、Bar 的 props.dataKey
         * 需要根据 chartData 成员字段进行配置
         */
        dataKey: string;
        /**
         * rechart Line、Area、Bar 的 props.dataKey
         */
        name?: string;
        /**
         * 只有在 type="composed" 中有效，图表类型，分别代表 LineChart、AreaChart、BarChart
         */
        chartType?: 'line' | 'area' | 'bar';
        hide?: boolean;
        stroke?: string;
        fill?: string;
        [x: string]: any;
    }[];
    /**
     * 图表数据源
     * 成员属性处理 `name` 字段，其他可以自定义，dataKeys中的 dataKey 需和自定义的字段名一致
     */
    chartData?: {
        /**
         * layout="horizontal" 是 name 的值为 x 轴的值。
         * layout="vertical" 是 name 的值为 x 轴的值。
         */
        name: string | number;
        [x: string]: any;
    }[];
}
export interface VarietyChartProps {
    /**
     * 图表的类型，分别对应 `<LineChart/>`,`<AreaChart/>`,`<BarChart/>`,`<ComposedChart/>`。
     * 这个属性在 VarietyChart 组件中是必填的，LinChart 等是非必填，这里为了兼容才设置为非必填。
     */
    type?: 'line' | 'area' | 'bar' | 'composed' | 'pie';
    /**
     * 数据源。
     */
    data?: ChartData;
    /**
     * 是否使用响应式，开启的话浏览器窗口大小改变会响应式适应
     */
    useResponsiveContainer?: boolean;
    /**
     * x轴 value 方式，内部做了处理，具体请看 [getFormatValue](/utils/getFormatValue)。
     */
    xAxisFormat?: string;
    /**
     * y轴 value 方式，内部做了处理，具体请看 [getFormatValue](/utils/getFormatValue)。
     */
    yAxisFormat?: string;
    /**
     * x轴 value 格式化函数。
     */
    xAxisFormatter?: Formatter;
    /**
     * y轴 value 格式化函数。
     */
    yAxisFormatter?: Formatter;
    /**
     * 图表宽度，配合 recharts ResponsiveContainer 组件使用不需要设置。
     */
    width?: number;
    /**
     * 图表高度，配合 recharts ResponsiveContainer 组件使用不需要设置。
     */
    height?: number;
    /**
     * 图表布局方式，水平或者垂直。
     */
    layout?: 'horizontal' | 'vertical';
    /**
     * 图表是否可以横向缩放。
     */
    brush?: boolean;
    stackOffset?: 'expand';
    /**
     * 其他的 props 分别和 rechart 的 [AreaChart](http://recharts.org/zh-CN/api/AreaChart)、
     * [BarChart](http://recharts.org/zh-CN/api/BarChart)、
     * [LineChart](http://recharts.org/zh-CN/api/LineChart)
     * 的 props 保持一致。
     */
    [key: string]: any;
}
/**
 * 基于 rechart 封装了包括 LineChart、AreaChart、BarChart、ComposedChart 的图表，y 轴值的长度会自适应。
 **/
declare function VarietyChart(props: VarietyChartProps): JSX.Element;
declare namespace VarietyChart {
    var displayName: string;
    var defaultProps: {
        layout: string;
        useResponsiveContainer: boolean;
        height: number;
        brush: boolean;
    };
}
export default VarietyChart;
